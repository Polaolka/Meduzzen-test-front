{"version":3,"file":"static/js/544.7194f3f6.chunk.js","mappings":"wJAGO,MAAMA,E,OAAiBC,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,2I,oGCEjC,MAAMC,EAAaJ,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0FAOvBE,EAAaL,EAAAA,EAAOC,IAAGK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,ubAUpBI,EAAAA,EAAOC,aAEWC,EAAAA,EAAWC,OAIXD,EAAAA,EAAWE,SAQzBX,EAAAA,EAAOC,IAAGW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,0oBAMjBI,EAAAA,EAAOM,UAEgBJ,EAAAA,EAAWE,QAYXF,EAAAA,EAAWE,QAMlCJ,EAAAA,EAAOM,UAQEN,EAAAA,EAAOO,kBAIHd,EAAAA,EAAOe,GAAEC,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,iLAIVI,EAAAA,EAAOU,aAOFjB,EAAAA,EAAOkB,GAAEC,IAAAA,GAAAhB,EAAAA,EAAAA,GAAA,iGAORH,EAAAA,EAAOoB,EAACC,IAAAA,GAAAlB,EAAAA,EAAAA,GAAA,kIAC5BI,EAAAA,EAAOM,WAOQb,EAAAA,EAAOoB,EAACE,IAAAA,GAAAnB,EAAAA,EAAAA,GAAA,mIAEvBI,EAAAA,EAAOM,W,qDCjGX,MAAMU,EAAiBvB,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0bAaxBI,EAAAA,EAAOiB,WAEWf,EAAAA,EAAWC,OAMXD,EAAAA,EAAWE,SAMhCc,EAAiBzB,EAAAA,EAAOC,IAAGK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,w5BAQNM,EAAAA,EAAWE,QAKhCJ,EAAAA,EAAOmB,eAagBjB,EAAAA,EAAWE,QAmBhCJ,EAAAA,EAAOoB,YAKTC,EAAc5B,EAAAA,EAAOC,IAAGW,IAAAA,GAAAT,EAAAA,EAAAA,GAAA,+GAKxBI,EAAAA,EAAOmB,gBAKPG,EAAY7B,EAAAA,EAAO8B,GAAEd,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,oFACvBI,EAAAA,EAAOM,W,sBCjFlB,MAiCA,EAjC4CkB,IAAe,IAAd,KAAEC,GAAMD,EACnD,MAAME,GAAWC,EAAAA,EAAAA,OACX,GAAEC,EAAE,KAAEC,GAASJ,EACfK,GAAgBC,EAAAA,EAAAA,KAAaC,GAAqBA,EAAMC,KAAKL,KAenE,OACEM,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,UACEC,EAAAA,EAAAA,MAACrB,EAAc,CAAAoB,SAAA,EACbF,EAAAA,EAAAA,KAAChB,EAAc,CAAAkB,UACbC,EAAAA,EAAAA,MAAChB,EAAW,CAAAe,SAAA,EACVF,EAAAA,EAAAA,KAAA,KAAAE,SAAG,iBACHF,EAAAA,EAAAA,KAACZ,EAAS,CAAAc,SAAEP,UAGhBK,EAAAA,EAAAA,KAACI,EAAAA,GAAM,CAACC,QAjBSC,KACrB,GAAIV,EAAe,CAEjB,MAAMW,EARV,SAAyBC,EAAiBC,GACxC,MAAMC,EAAY,CAACF,EAASC,GAASE,OACrC,MAAM,GAANC,OAAUF,EAAU,GAAE,KAAAE,OAAIF,EAAU,GACtC,CAKmBG,CAAejB,EAAeF,GAC7CF,EAAS,SAADoB,OAAUL,GACpB,GAYoCL,SAAC,kBAElC,E,eCtCA,MAAMY,EAAcvD,EAAAA,EAAOC,IAAGC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,kHCmCrC,QA3BA,WACE,MAAMqD,GAAWC,EAAAA,EAAAA,MACXC,GAAQpB,EAAAA,EAAAA,KAAaC,GAAqBA,EAAMoB,KAAKD,QACrDrB,GAAgBC,EAAAA,EAAAA,KAAaC,GAAqBA,EAAMC,KAAKL,KAC7DyB,EAAgBF,EAAMG,QAAQC,GAASA,EAAG3B,KAAOE,IAEjD0B,GAAYzB,EAAAA,EAAAA,KAAaC,GAAqBA,EAAMyB,QAAQD,YAKlE,OAHAE,EAAAA,EAAAA,YAAU,KACRT,GAASU,EAAAA,EAAAA,KAAW,GACnB,CAACV,KAEFf,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CAAAxB,SAEPoB,GAAWtB,EAAAA,EAAAA,KAAC2B,EAAAA,EAAM,KAAK3B,EAAAA,EAAAA,KAACc,EAAW,CAAAZ,UACpB,OAAbiB,QAAa,IAAbA,OAAa,EAAbA,EAAeS,QAAS,EACV,OAAbT,QAAa,IAAbA,OAAa,EAAbA,EAAeU,KAAKR,IAClBrB,EAAAA,EAAAA,KAAC8B,EAAQ,CAAavC,KAAM8B,GAAbA,EAAG3B,OAGpBM,EAAAA,EAAAA,KAAC+B,EAAAA,GAAO,CAAA7B,SAAC,yCAKnB,ECfA,QAfA,WACE,MAAM8B,GAASnC,EAAAA,EAAAA,KAAaC,GAAqBA,EAAMC,KAAKiC,SAC5D,OACEhC,EAAAA,EAAAA,KAAC0B,EAAAA,EAAS,CAAAxB,UACRF,EAAAA,EAAAA,KAACrC,EAAU,CAAAuC,SACR8B,GACChC,EAAAA,EAAAA,KAACiC,EAAK,KAENjC,EAAAA,EAAAA,KAACpC,EAAU,CAAAsC,SAAC,2IAKtB,E,aCdA,MAQA,EARiBgC,KAEblC,EAAAA,EAAAA,KAAC1C,EAAAA,EAAc,CAAA4C,UACbF,EAAAA,EAAAA,KAACmC,EAAI,K","sources":["components/Styled/HomePage.styled.tsx","components/Home/Home.styled.tsx","components/UserCard/UserCard.styled.tsx","components/UserCard/UserCard.tsx","components/Users/Users.styled.tsx","components/Users/Users.tsx","components/Home/Home.tsx","pages/HomePage.jsx"],"sourcesContent":["import styled from \"@emotion/styled\";\n\n\nexport const HomePageStyled = styled.div`\n  margin-top: 112px;\n  flex-direction: column;\n  display: flex;\n  gap: 24px;\n  padding-left: 20px;\n  padding-right: 20px;\n\n`;\n","import styled from \"@emotion/styled\";\nimport { mediaSizes } from \"../../constants/index\";\nimport { colors } from \"../../constants/index\";\n\n\nexport const HomeStyled = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  justify-content: center;\n`;\n\nexport const MainStyled = styled.div`\n  padding: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  width: 100%;\n  flex-shrink: 0;\n  border-radius: 30px;\n  background: ${colors.colorLightBG};\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    padding: 49px 32px;\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    align-items: flex-start;\n    width: 720px;\n    height: 530px;\n    padding: 98px 64px;\n  }\n`;\n\nexport const Text = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 32px;\n  margin-bottom: 64px;\n  & h1 {\n    color: ${colors.colorText};\n    width: 100%;\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      max-width: 548px;\n    }\n  }\n\n  & p {\n    color: #121417;\n    font-size: 16px;\n    font-weight: 400;\n    line-height: 1.38;\n    letter-spacing: -0.32px;\n    width: 100%;\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      max-width: 471px;\n    }\n    \n  }\n  & span {\n    color: ${colors.colorText};\n  font-size: 48px;\n  font-style: italic;\n  font-weight: 400;\n  line-height: 56px;\n  letter-spacing: -0.96px;\n\n  border-radius: 16px;\n  background-color: ${colors.colorLightOrange};\n  }\n`;\n\nexport const ListStyled = styled.ul`\n  padding: 40px 120px;\n  width: 100%;\n  border-radius: 30px;\n  border: 1.5px dashed ${colors.colorOrange};\n\n  display: flex;\n  justify-content: space-between;\n  max-width: 100%;\n`;\n\nexport const ListItemStyled = styled.li`\n  display: flex;\n  justify-content: space-between;\n  gap: 16px;\n  max-width: 100%;\n`;\n\nexport const CountTextStyled = styled.p`\n  color: ${colors.colorText};\n  font-size: 28px;\n  font-weight: 500;\n  line-height: 1.14; /* 114.286% */\n  letter-spacing: -0.56px;\n`;\n\nexport const TextStyled = styled.p`\n  width: 90px;\n  color: ${colors.colorText};\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.28;\n  letter-spacing: -0.28px;\n`;\n\n\n","import styled from \"@emotion/styled\";\nimport { colors } from \"../../constants/index\";\n\nimport { mediaSizes } from \"../../constants/index\";\n\nexport const UserCardStyled = styled.div`\n  position: relative;\n  width: 80%;\n  padding: 12px;\n\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 24px;\n  flex-wrap: wrap;\n  align-items: flex-start;\n\n  border-radius: 24px;\n  background: ${colors.colorWhite};\n\n  @media screen and (min-width: ${mediaSizes.tablet}) {\n    flex-wrap: nowrap;\n    padding: 16px;\n    gap: 30px;\n  }\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    padding: 24px;\n    gap: 40px;\n  }\n`;\n\nexport const InfoUserHeader = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 28px;\n  align-items: start;\n\n  @media screen and (min-width: ${mediaSizes.desktop}) {\n    width: 968px;\n    justify-content: space-between;\n  }\n  & p {\n    color: ${colors.colorLigthText};\n    font-size: 16px;\n    font-weight: 500;\n    line-height: 1.5;\n  }\n  & ul {\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: flex-start;\n\n    gap: 16px;\n\n    @media screen and (min-width: ${mediaSizes.desktop}) {\n      justify-content: space-between;\n    }\n\n    & :not(:last-child) {\n      &:after {\n        content: \"\";\n        display: block;\n        height: 17px;\n        width: 1px;\n        background-color: rgba(18, 20, 23, 0.2);\n        margin-left: 16px;\n      }\n    }\n  }\n  & li {\n    display: flex;\n    align-items: center;\n    & span {\n      color: ${colors.colorGreen};\n      margin-left: 4px;\n    }\n  }\n`;\nexport const UserNameBox = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  & p {\n    color: ${colors.colorLigthText};\n    margin: 0;\n  }\n`;\n\nexport const UsersName = styled.h3`\n  color: ${colors.colorText};\n  font-size: 24px;\n  font-weight: 500;\n  line-height: 1;\n`;\n","import { useSelector } from \"react-redux\";\nimport { User as IUser } from \"../../redux/user/slice\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  UserCardStyled,\n  InfoUserHeader,\n  UsersName,\n  UserNameBox,\n} from \"./UserCard.styled\";\nimport { Button } from \"../Styled/index\";\nimport RootState from \"../../redux/RootState\";\n\nconst UserCard: React.FC<{ User: IUser }> = ({ User }) => {\n  const navigate = useNavigate();\n  const { id, name } = User;\n  const currentUserId = useSelector((state: RootState) => state.auth.id);\n\n  function generateChatId (user1Id: string, user2Id: string) {\n    const sortedIds = [user1Id, user2Id].sort();\n    return `${sortedIds[0]}_${sortedIds[1]}`;\n  }\n\n  const openChatHandle = () => {\n    if (currentUserId) {\n\n      const chatId = generateChatId(currentUserId, id);\n      navigate(`/chat/${chatId}`);\n    }\n  };\n\n  return (\n    <>\n      <UserCardStyled>\n        <InfoUserHeader>\n          <UserNameBox>\n            <p>User`s name</p>\n            <UsersName>{name}</UsersName>\n          </UserNameBox>\n        </InfoUserHeader>\n        <Button onClick={openChatHandle}>Open chat</Button>\n      </UserCardStyled>\n    </>\n  );\n};\n\nexport default UserCard;\n","import styled from \"@emotion/styled\";\n\n\nexport const UsersStyled = styled.div`\n  margin-top: 12px;\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n`;","import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Container from \"../Container/Container\";\nimport { Caption } from \"../Form/Form.styled\";\nimport { Loader } from \"../Loader/Loader\";\nimport UserCard from \"../UserCard/UserCard\";\nimport { getUsers } from \"../../redux/user/operations\";\nimport RootState from \"../../redux/RootState\";\nimport { ThunkDispatch, UnknownAction } from \"@reduxjs/toolkit\";\nimport { UsersStyled } from \"./Users.styled\";\n\nfunction Users() {\n  const dispatch = useDispatch<ThunkDispatch<{}, {}, UnknownAction>>();\n  const users = useSelector((state: RootState) => state.user.users);\n  const currentUserId = useSelector((state: RootState) => state.auth.id);\n  const filteredUsers = users.filter((el) => ( el.id !== currentUserId))\n\n  const isLoading = useSelector((state: RootState) => state.loading.isLoading);\n\n  useEffect(() => {\n    dispatch(getUsers());\n  }, [dispatch]);\n  return (\n    <Container>\n\n      {isLoading?(<Loader/>):(<UsersStyled>\n        {filteredUsers?.length > 0 ? (\n          filteredUsers?.map((el) => (\n            <UserCard key={el.id} User={el} />\n          ))\n        ) : (\n          <Caption>Unfortunately, no user was found.</Caption>\n        )}\n      </UsersStyled>)}\n    </Container>\n  );\n}\n\nexport default Users;\n","import Container from \"../Container/Container\";\nimport { HomeStyled, MainStyled } from \"./Home.styled\";\nimport { useSelector } from \"react-redux\";\nimport RootState from \"../../redux/RootState\";\nimport Users from \"../Users/Users\";\n\nfunction Home(): JSX.Element {\n  const isAuth = useSelector((state: RootState) => state.auth.isAuth);\n  return (\n    <Container>\n      <HomeStyled>\n        {isAuth ? (\n          <Users />\n        ) : (\n          <MainStyled>Приєднуйся та спілкуйся ;)</MainStyled>\n        )}\n      </HomeStyled>\n    </Container>\n  );\n}\n\nexport default Home;\n","\n\nimport Home from \"../components/Home/Home\";\nimport { HomePageStyled } from \"../components/Styled/HomePage.styled\";\n\nconst HomePage = () => {\n  return (\n    <HomePageStyled>\n      <Home />\n    </HomePageStyled>\n  );\n};\n\nexport default HomePage;"],"names":["HomePageStyled","styled","div","_templateObject","_taggedTemplateLiteral","HomeStyled","MainStyled","_templateObject2","colors","colorLightBG","mediaSizes","tablet","desktop","_templateObject3","colorText","colorLightOrange","ul","_templateObject4","colorOrange","li","_templateObject5","p","_templateObject6","_templateObject7","UserCardStyled","colorWhite","InfoUserHeader","colorLigthText","colorGreen","UserNameBox","UsersName","h3","_ref","User","navigate","useNavigate","id","name","currentUserId","useSelector","state","auth","_jsx","_Fragment","children","_jsxs","Button","onClick","openChatHandle","chatId","user1Id","user2Id","sortedIds","sort","concat","generateChatId","UsersStyled","dispatch","useDispatch","users","user","filteredUsers","filter","el","isLoading","loading","useEffect","getUsers","Container","Loader","length","map","UserCard","Caption","isAuth","Users","HomePage","Home"],"sourceRoot":""}